model: model.dgn.ecgmm.ECGMM
experiment: experiment.cgmm_classifier_task.ClassifierCGMMTask
higher_results_are_better: True
dataset-getter: data.provider.IncrementalDataProvider
log_every: 1
num_dataloader_workers: 0  # > 0 only with --debug option and GPU device
pin_memory: False  # True only with --debug option and GPU device
device: cpu
grid:
  layer_config:
    embeddings_folder: /data/errica/ECGMM_EMBEDDINGS
    checkpoint: True
    batch_size:
      - 32
    shuffle:
      - False
    previous_layers_to_use:
      - "1"  # multiple layers: "1,2,4"
    concatenate_on_axis: 1  # must be > 0
    max_layers: 20
    layers:
      - 10
      - 20
    C:
      - 20
    CA:
      - 5
      - 10
    predictor: null
    node_predictor:
      - model.predictor.node_predictor.UnsupervisedProbabilisticNodeReadout
    node_emission:
      - model.distribution.emission.IsotropicGaussian
    edge_predictor:
      - model.predictor.node_predictor.UnsupervisedProbabilisticNodeReadout
    edge_emission:
      - model.distribution.emission.Categorical
    # HERE TRY ALL COMBINATIONS, LEAVE THE REST AS IN THE OTHER EMBEDDINGS CONFIG FILE
    unibigram:
       - True
       - False
    aggregation:
      - mean
    infer_with_posterior:
      - True
      - False
    epochs:
      - 20
    wrapper:
      - training.engine.IncrementalTrainingEngine
    loss:
      - training.callback.loss.CGMMLoss
    optimizer:
      - training.callback.optimizer.CGMMOptimizer
    scorer:
      -
        class_name: training.callback.score.MultiScore
        args:
           # used at model selection time. Should be the one on which to perform early stopping
           main_scorer: training.callback.score.CGMMCompleteLikelihoodScore
           true_likelihood: training.callback.score.CGMMTrueLikelihoodScore
    plotter:
    arbitrary_function_config:  # Define the information for the arbitrary function
      shuffle: True
      batch_size:
        - 32
      checkpoint: True
      log_every: 1
      num_dataloader_workers: 0  # > 0 only with --debug option and GPU device
      pin_memory: False  # True only with --debug option and GPU device
      device: cpu
      epochs:
        - 2000
      hidden_units:
        - 128
      optimizer:
        -
          class_name: training.callback.optimizer.Optimizer
          args:
            optimizer_class_name: torch.optim.Adam
            lr:
              - 0.0005
            weight_decay:
              - 0.0001
      loss:
        - training.callback.loss.MulticlassClassificationLoss
      scorer:
        - training.callback.score.MulticlassAccuracyScore
      predictor:
        - model.predictor.graph_predictor.SimpleMLP
      wrapper:
        - training.engine.TrainingEngine
      early_stopper:
        -
          class_name:
            - training.callback.early_stopping.PatienceEarlyStopper
          args:
            patience:
              - 100
            monitor: validation_Multiclass Accuracy # (train_,validation_)[name_of_the_scorer_or_loss_to_monitor]
            mode: max
            checkpoint: True
      plotter:
        - training.callback.plotter.Plotter
